#include "sapi.h"              // <= sAPI header

/* FUNCION PRINCIPAL, PUNTO DE ENTRADA AL PROGRAMA LUEGO DE RESET. */
int main(void){

   /* ------------- INICIALIZACIONES ------------- */

   /* Inicializar la placa */
   boardConfig();
   gpioInit(GPIO1, GPIO_OUTPUT);
   gpioInit(GPIO3, GPIO_OUTPUT);
   gpioInit(GPIO7, GPIO_OUTPUT);
   gpioInit(GPIO8, GPIO_OUTPUT);

   /* Variable de Retardo no bloqueante */
   delay_t delay;

   /* Inicializar Retardo no bloqueante con tiempo en milisegundos
      (500ms = 0,5s) */
   delayConfig( &delay, 500 );

   int8_t i = 3;
   uint8_t sequence = 0;

   /* ------------- REPETIR POR SIEMPRE ------------- */
   while(1) {

      /* delayRead retorna TRUE cuando se cumple el tiempo de retardo */
      if ( delayRead( &delay ) ){
         if ( !sequence ){
            i--;
         }
         else{
            i++;
         }
      }

      if ( i == 0 ){
         gpioWrite( GPIO1, ON );
         gpioWrite( GPIO3, OFF );
         gpioWrite( GPIO7, OFF );
         gpioWrite( GPIO8, OFF );
      }
      if ( i == 1 ){
         gpioWrite( GPIO1, OFF );
         gpioWrite( GPIO3, ON );
         gpioWrite( GPIO7, OFF );
         gpioWrite( GPIO8, OFF );
      }
      if ( i == 2 ){
         gpioWrite( GPIO1, OFF );
         gpioWrite( GPIO3, OFF );
         gpioWrite( GPIO7, ON );
         gpioWrite( GPIO8, OFF );
      }
      if ( i == 3 ){
         gpioWrite( GPIO1, OFF );
         gpioWrite( GPIO3, OFF );
         gpioWrite( GPIO7, OFF );
         gpioWrite( GPIO8, ON );
      }

      if ( i < 0 ){
         i = 3;
      }
      if ( i > 3 ){
         i = 0;
      }

   }

   /* NO DEBE LLEGAR NUNCA AQUI, debido a que a este programa no es llamado
      por ningun S.O. */
   return 0 ;
}

/*==================[end of file]============================================*/
